{"version":3,"sources":["reportWebVitals.js","config/index.js","components/molecules/CharacterCard.jsx","components/pages/Main.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DATE","Date","getTime","API_KEY","HASH","crypto","createHash","update","toString","digest","CharacterCard","props","className","width","height","alt","src","thumbnail","path","replace","extension","name","StyledMain","styled","div","Main","useState","characters","setCharacters","useEffect","mounted","axios","get","response","console","log","data","results","map","character","id","ReactDOM","render","StrictMode","exact","component","document","getElementById"],"mappings":"6bAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+ECJRQ,GADK,IAAIC,MACGC,UAEZC,EAAU,mCAEVC,EAAOC,IACVC,WAAW,OACXC,OAAOP,EAAKQ,YACZD,OAJiB,4CAKjBA,OAAOJ,GACPM,OAAO,O,gBCEKC,EAXO,SAACC,GACrB,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKC,MAAO,IAAKC,OAAQ,IAAKC,IAAI,GAAGC,IAAG,UAAKL,EAAMM,UAAUC,KAAKC,QAAQ,OAAQ,SAA1C,YAAsDR,EAAMM,UAAUG,aAC9G,oBAAIR,UAAU,+BAAd,SAA8CD,EAAMU,aCFtDC,EAAaC,IAAOC,IAAV,8EA6BDC,EAxBF,WAAO,IAAD,EAEmBC,mBAAS,IAF5B,mBAEVC,EAFU,KAEEC,EAFF,KAiBjB,OAbAC,qBAAU,WACR,IAAIC,GAAU,EASd,OAPAC,IAAMC,IAAN,iEAAoEhC,EAApE,mBAAmFG,EAAnF,iBAAmGC,IAChGV,MAAK,SAAAuC,GACAH,IACFI,QAAQC,IAAIF,EAASG,KAAKA,KAAKC,SAC/BT,EAAcK,EAASG,KAAKA,KAAKC,aAGhC,kBAAMP,GAAU,KACtB,IAGD,cAACR,EAAD,UACGK,GAAcA,EAAWW,KAAI,SAAAC,GAAS,OAAI,cAAC,EAAD,CAAkClB,KAAMkB,EAAUlB,KAAMJ,UAAWsB,EAAUtB,WAAzDsB,EAAUC,UCvB/EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOzB,KAAK,IAAI0B,OAAK,EAACC,UAAWpB,QAGrCqB,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.afc8e263.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import crypto from \"crypto\";\n\nlet date = new Date();\nconst DATE = date.getTime();\n\nconst API_KEY = \"801ba33176620102b5413c542a89c925\";\nconst PRIVATE_KEY = \"9dfaddc316d2680fad4266d79cee2fb81ef25d29\";\nconst HASH = crypto\n  .createHash(\"md5\")\n  .update(DATE.toString())\n  .update(PRIVATE_KEY)\n  .update(API_KEY)\n  .digest(\"hex\");\n\nexport { API_KEY, HASH, DATE };\n","import React from 'react'\nimport './CharacterCard.css'\n\nconst CharacterCard = (props) => {\n  return (\n    <div className=\"character-card\">\n      <div className=\"character-card-content\">\n        <img width={300} height={300} alt=\"\" src={`${props.thumbnail.path.replace('http', 'https')}.${props.thumbnail.extension}`} />\n        <h3 className=\"character-card-content-title\">{props.name}</h3>\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { API_KEY, HASH, DATE } from '../../config'\nimport CharacterCard from '../molecules/CharacterCard';\n\nconst StyledMain = styled.div`\n  display: grid;\n  grid-template: '1fr 1fr 1fr'\n`;\n\nconst Main = () => {\n\n  const [characters, setCharacters] = useState([])\n  \n  useEffect(() => {\n    let mounted = true;\n    \n    axios.get(`https://gateway.marvel.com:443/v1/public/characters?ts=${DATE}&apikey=${API_KEY}&hash=${HASH}`)\n      .then(response => {\n        if (mounted) {\n          console.log(response.data.data.results)\n          setCharacters(response.data.data.results)\n        }});\n\n    return () => mounted = false;\n  }, [])\n\n  return (\n    <StyledMain>\n      {characters && characters.map(character => <CharacterCard key={character.id} name={character.name} thumbnail={character.thumbnail} />)}\n    </StyledMain>\n  )\n}\n\nexport default Main","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Main from \"./components/pages/Main\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route path=\"/\" exact component={Main}></Route>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}