{"version":3,"sources":["reportWebVitals.js","components/organisms/Header.jsx","config/index.js","components/molecules/CharacterCard.jsx","components/atoms/Input.jsx","components/molecules/SearchArea.jsx","components/templates/Dashboard.jsx","components/pages/Main.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","useState","window","innerWidth","width","setWidth","useEffect","handleResizeWindow","addEventListener","removeEventListener","className","class","DATE","Date","getTime","API_KEY","HASH","crypto","createHash","update","toString","digest","CharacterCard","props","height","alt","src","thumbnail","path","replace","extension","name","Input","SearchArea","type","Dashboard","characters","setCharacters","mounted","axios","get","response","console","log","data","results","map","character","id","Main","ReactDOM","render","StrictMode","exact","component","document","getElementById"],"mappings":"yiBAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,wCC2BCQ,EA/BA,WAAO,IAAD,EAEOC,mBAASC,OAAOC,YAFvB,mBAEZC,EAFY,KAELC,EAFK,KAenB,OAVAC,qBAAU,WACR,IAAMC,EAAqB,kBAAMF,EAASH,OAAOC,aAGjD,OADAD,OAAOM,iBAAiB,SAAUD,GAC3B,WAELL,OAAOO,oBAAoB,SAAUF,MAEtC,IAGD,qBAAKG,UAAU,SAAf,SAEIN,EAfa,IAgBX,mBAAGO,MAAM,gBACP,qCACE,0CACA,0CACA,0CACA,gD,oCCxBRC,GADK,IAAIC,MACGC,UAEZC,EAAU,mCAEVC,EAAOC,IACVC,WAAW,OACXC,OAAOP,EAAKQ,YACZD,OAJiB,4CAKjBA,OAAOJ,GACPM,OAAO,OCEKC,G,OAXO,SAACC,GACrB,OACE,qBAAKb,UAAU,iBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,6BAA6BN,MAAO,IAAKoB,OAAQ,IAAKC,IAAI,GAAGC,IAAG,UAAKH,EAAMI,UAAUC,KAAKC,QAAQ,OAAQ,SAA1C,YAAsDN,EAAMI,UAAUG,aACrJ,oBAAIpB,UAAU,+BAAd,SAA8Ca,EAAMQ,c,SCK7CC,G,OAVD,SAACT,GAEb,OACE,qCACE,mBAAGb,UAAU,8BACb,mCAAOA,UAAU,gBAAmBa,SCQ3BU,G,OAZI,WAEjB,OACE,qBAAKvB,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,oBAAd,4DACA,cAAC,EAAD,CAAOwB,KAAK,OAAOH,KAAK,kBCuBjBI,G,OA1BG,WAAO,IAAD,EACclC,mBAAS,IADvB,mBACfmC,EADe,KACHC,EADG,KAgBtB,OAbA/B,qBAAU,WACR,IAAIgC,GAAU,EASd,OAPAC,IAAMC,IAAN,iEAAoE5B,EAApE,mBAAmFG,EAAnF,iBAAmGC,IAChGtB,MAAK,SAAA+C,GACAH,IACFI,QAAQC,IAAIF,EAASG,KAAKA,KAAKC,SAC/BR,EAAcI,EAASG,KAAKA,KAAKC,aAGhC,kBAAMP,GAAU,KACtB,IAGD,qCACE,cAAC,EAAD,IACA,qBAAK5B,UAAU,YAAf,SACG0B,GAAcA,EAAWU,KAAI,SAAAC,GAAS,OAAI,cAAC,EAAD,CAAkChB,KAAMgB,EAAUhB,KAAMJ,UAAWoB,EAAUpB,WAAzDoB,EAAUC,cCZlEC,G,OAVF,WAEX,OACE,sBAAKvC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SCHNwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOxB,KAAK,IAAIyB,OAAK,EAACC,UAAWL,QAGrCM,SAASC,eAAe,SAM1BjE,M","file":"static/js/main.5dabc524.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from 'react'\nimport './Header.scss'\n\nconst Header = () => {\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const breakpoint = 700;\n\n  useEffect(() => {\n    const handleResizeWindow = () => setWidth(window.innerWidth);\n    // subscribe to window resize event \"onComponentDidMount\"\n    window.addEventListener(\"resize\", handleResizeWindow);\n    return () => {\n      // unsubscribe \"onComponentDestroy\"\n      window.removeEventListener(\"resize\", handleResizeWindow);\n    };\n  }, []);\n\n  return (\n    <div className=\"header\">\n      {\n        width < breakpoint ?\n          <i class=\"fas fa-bars\"></i> \n          : <>\n              <div>Boton 1</div>\n              <div>Boton 2</div>\n              <div>Boton 3</div>\n              <div>Boton 4</div>\n            </>\n      }\n    </div>\n  )\n}\n\nexport default Header","import crypto from \"crypto\";\n\nlet date = new Date();\nconst DATE = date.getTime();\n\nconst API_KEY = \"801ba33176620102b5413c542a89c925\";\nconst PRIVATE_KEY = \"9dfaddc316d2680fad4266d79cee2fb81ef25d29\";\nconst HASH = crypto\n  .createHash(\"md5\")\n  .update(DATE.toString())\n  .update(PRIVATE_KEY)\n  .update(API_KEY)\n  .digest(\"hex\");\n\nexport { API_KEY, HASH, DATE };\n","import React from 'react'\nimport './CharacterCard.scss'\n\nconst CharacterCard = (props) => {\n  return (\n    <div className=\"character-card\">\n      <div className=\"character-card-content\">\n        <img className=\"character-card-content-img\" width={300} height={300} alt=\"\" src={`${props.thumbnail.path.replace('http', 'https')}.${props.thumbnail.extension}`} />\n        <h3 className=\"character-card-content-title\">{props.name}</h3>\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard","import React from 'react'\nimport './Input.scss'\n\nconst Input = (props) => {\n\n  return (\n    <>\n      <i className=\"fas fa-search search-icon\"></i>\n      <input className=\"custom-input\" {...props}/>\n    </>\n  )\n}\n\nexport default Input;","import React from 'react'\nimport Input from '../atoms/Input'\nimport './SearchArea.scss'\n\nconst SearchArea = () => {\n\n  return (\n    <div className=\"search-area\">\n      <div className=\"input-container\">\n        <h1 className=\"search-area-title\">Aquí podés buscar Personajes y Cómics</h1>\n        <Input type=\"text\" name=\"search\"/>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchArea","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { API_KEY, HASH, DATE } from '../../config'\nimport CharacterCard from '../molecules/CharacterCard'\nimport SearchArea from '../molecules/SearchArea'\nimport './Dashboard.scss'\n\nconst Dashboard = () => {\n  const [characters, setCharacters] = useState([])\n\n  useEffect(() => {\n    let mounted = true;\n    \n    axios.get(`https://gateway.marvel.com:443/v1/public/characters?ts=${DATE}&apikey=${API_KEY}&hash=${HASH}`)\n      .then(response => {\n        if (mounted) {\n          console.log(response.data.data.results)\n          setCharacters(response.data.data.results)\n        }});\n\n    return () => mounted = false;\n  }, [])\n\n  return (\n    <>\n      <SearchArea />\n      <div className=\"dashboard\">\n        {characters && characters.map(character => <CharacterCard key={character.id} name={character.name} thumbnail={character.thumbnail} />)}\n      </div>\n    </>\n  )\n}\n\nexport default Dashboard;","import React from 'react'\nimport Header from '../organisms/Header'\nimport Dashboard from '../templates/Dashboard'\nimport './Main.scss'\n\nconst Main = () => {\n\n  return (\n    <div className=\"main-page\">\n      <Header />\n      <Dashboard/>\n    </div>\n  )\n}\n\nexport default Main","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Main from \"./components/pages/Main\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route path=\"/\" exact component={Main}></Route>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}